{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"docs/","title":"\ud83e\uddca Implementa\u00e7\u00e3o Data Lakehouse","text":"<p>Este projeto demonstra uma arquitetura de Data Lakehouse local, utilizando ferramentas open-source de ponta.</p>"},{"location":"docs/#objetivo","title":"\ud83c\udfaf Objetivo","text":"<p>Criar uma estrutura funcional para experimentar o modelo Lakehouse com:</p> <ul> <li>Processamento distribu\u00eddo com Spark</li> <li>Gerenciamento de tabelas com Apache Iceberg</li> <li>Armazenamento com MinIO (S3 compatible)</li> <li>Ambiente interativo com Jupyter Lab</li> </ul>"},{"location":"docs/#destaques","title":"\ud83d\udccc Destaques","text":"<p>Totalmente containerizado</p> <p>Toda a stack roda via Docker, sem precisar instalar nada manualmente.</p> <p>Ideal para estudo e testes</p> <p>\u00c9 poss\u00edvel modificar os notebooks, os scripts de ingest\u00e3o e os dados sem quebrar a estrutura.</p>"},{"location":"docs/execucao/","title":"\ud83d\ude80 Execu\u00e7\u00e3o do Projeto","text":"<p>Ap\u00f3s subir os containers, acesse os seguintes servi\u00e7os:</p>"},{"location":"docs/execucao/#acessos","title":"\ud83d\udd17 Acessos","text":"<ul> <li> <p>Jupyter Lab: http://localhost:8888   O token ser\u00e1 exibido no terminal ao iniciar os servi\u00e7os.</p> </li> <li> <p>MinIO (Painel Web): http://localhost:9000 </p> </li> <li>Usu\u00e1rio: <code>minioadmin</code> </li> <li>Senha: <code>minioadmin</code></li> </ul>"},{"location":"docs/execucao/#como-testar","title":"\ud83e\uddea Como testar","text":"<ol> <li>Acesse o Jupyter Lab</li> <li>Abra o notebook <code>notebooks/main.ipynb</code></li> <li> <p>Execute as c\u00e9lulas para:</p> </li> <li> <p>Criar tabelas com Apache Iceberg</p> </li> <li>Ingerir dados no MinIO</li> <li>Processar com Spark</li> <li>Persistir dados com versionamento no Lakehouse</li> </ol> <p>Dica</p> <p>Voc\u00ea pode modificar os dados de entrada ou transformar os scripts conforme sua necessidade para simula\u00e7\u00f5es mais avan\u00e7adas.</p>"},{"location":"docs/instalacao/","title":"Instala\u00e7\u00e3o","text":""},{"location":"docs/instalacao/#passo-1-clonar-projeto","title":"Passo 1 - Clonar projeto","text":"<p>Para rodar o projeto roda este comando e siga as instru\u00e7\u00f5es a baixo: <pre><code>git clone https://github.com/LuizZomer/implementacao_data_lakehouse.git\n</code></pre></p>"},{"location":"docs/instalacao/#passo-2-rodar-o-docker-compose","title":"Passo 2 - Rodar o docker compose","text":"<p>Para iniciar as aplica\u00e7\u00f5es necessarias para uso voc\u00ea ter\u00e1 que rodar este comando na raiz do projeto: <pre><code>docker compose up\n</code></pre> Este compose foi retirado diretamente da documenta\u00e7\u00e3o ofical, apenas sendo modificado esta parte no servi\u00e7o do spark-iceberg:</p> <pre><code>  ports:\n        - 7077:7077 &lt;-- adicionado esta exposi\u00e7\u00e3o de portas\n        - 8888:8888\n        - 8080:8080\n        - 10000:10000\n        - 10001:10001\n</code></pre>"},{"location":"docs/instalacao/#passo-3-entrar-no-jupiter-notebook","title":"Passo 3 - Entrar no jupiter notebook","text":"<p>Por meio da URL voc\u00ea ir\u00e1 acessar o jupiter notebook de forma interna no container com a url: <pre><code>http://localhost:8888/tree?\n</code></pre></p>"},{"location":"docs/instalacao/#passo-4-copiar-csv-para-o-notebook","title":"Passo 4 - Copiar csv para o notebook","text":"<p>Na raiz do projeto tem um arquivo csv, com a home do jupyter notebook aberta voc\u00ea s\u00f3 arrasta e solta o arquivo. </p>"},{"location":"docs/instalacao/#passo-4-rodar-o-codigo","title":"Passo 4 - Rodar o codigo","text":"<p>J\u00e1 dentro do jupiter notebook voc\u00ea criar\u00e1 um novo notebook no bot\u00e3o da parte de cima da tela, apartir dele poder\u00e1 rodar os codigos que est\u00e3o na main.ipynb, j\u00e1 est\u00e3o na ordem correta para funcionar e com coment\u00e1rios explicando seus funcionamento de forma detalhada.</p>"},{"location":"docs/referencias/","title":"Refer\u00eancia R\u00e1pida: Iceberg + Spark com Docker Compose","text":"<p>\ud83d\udd17 Documenta\u00e7\u00e3o oficial Apache: iceberg.apache.org/spark-quickstart</p>"},{"location":"docs/tecnologias/","title":"Tecnologias","text":""},{"location":"docs/tecnologias/#tecnologias-usadas","title":"Tecnologias usadas:","text":"<ul> <li>UV (Gerenciador de pacotes python)</li> <li>Min.io (Data lake)</li> <li>Apache iceberg</li> <li>Apache spark</li> <li>Pyspark</li> <li>Jupyter notebook</li> <li>Docker</li> </ul>"}]}